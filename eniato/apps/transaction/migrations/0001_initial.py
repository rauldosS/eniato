# Generated by Django 4.1.1 on 2022-12-07 02:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('category', '0001_initial'),
        ('credit_card', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Recurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('fixed', models.BooleanField(default=False, verbose_name='Fixa')),
                ('repeat', models.BooleanField(default=False, verbose_name='Repetir')),
                ('repeat_amount', models.IntegerField(default=2, validators=[django.core.validators.MaxValueValidator(100, message='Deve ser um valor menor que 100'), django.core.validators.MinValueValidator(2, message='Deve ser um valor maior que 2')], verbose_name='Vezes')),
                ('repeat_period', models.CharField(choices=[('everyday', 'EVERY_DAY'), ('weekly', 'WEEKLY'), ('monthly', 'MONTHLY'), ('annually', 'ANNUALLY'), ('every_day_week', 'EVERY_DAY_WEEK')], max_length=50, verbose_name='Período')),
                ('amout', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Total')),
                ('deleted_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('stored', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='stores/', verbose_name='Ícone')),
                ('color', models.CharField(choices=[('blue', 'BLUE'), ('red', 'RED'), ('jigglypuff', 'JIGGLYPUFF'), ('pink', 'PINK'), ('yellow', 'YELLOW'), ('orange', 'ORANGE'), ('green', 'GREEN'), ('purple', 'PURPLE'), ('petrel', 'PETREL'), ('primer', 'PRIMER')], max_length=50, verbose_name='Cor')),
                ('deleted_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Loja',
                'verbose_name_plural': 'Lojas',
            },
            managers=[
                ('stored', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('icon', models.ImageField(upload_to='stores/', verbose_name='Ícone')),
                ('color', models.CharField(choices=[('blue', 'BLUE'), ('red', 'RED'), ('jigglypuff', 'JIGGLYPUFF'), ('pink', 'PINK'), ('yellow', 'YELLOW'), ('orange', 'ORANGE'), ('green', 'GREEN'), ('purple', 'PURPLE'), ('petrel', 'PETREL'), ('primer', 'PRIMER')], max_length=50, verbose_name='Cor')),
                ('deleted_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
            managers=[
                ('stored', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('installment', models.IntegerField(blank=True, null=True, verbose_name='Parcela')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição')),
                ('transaction_date', models.DateField(verbose_name='Data')),
                ('transaction_type', models.CharField(choices=[('income', 'INCOME'), ('expense', 'EXPENSE'), ('credit', 'CREDIT'), ('incoming_transfer', 'INCOMING_TRANSFER'), ('outgoing_transfer', 'OUTGOING_TRANSFER')], max_length=50, verbose_name='Tipo de transação')),
                ('status', models.BooleanField(default=False, verbose_name='Situação')),
                ('ignore', models.BooleanField(default=False, verbose_name='Ignorar transação')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/transitions/%Y/%m/%d/', verbose_name='Arquivo')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_transaction', to='accounts.account')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_transaction', to='category.category')),
                ('credit_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_card_transaction', to='credit_card.creditcard')),
                ('deleted_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('recurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recorrence_transaction', to='transaction.recurrence')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='store_transaction', to='transaction.store')),
                ('tag', models.ManyToManyField(blank=True, related_name='tags_transaction', to='transaction.tag')),
            ],
            options={
                'verbose_name': 'Transação',
                'verbose_name_plural': 'Transações',
            },
            managers=[
                ('stored', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DailyBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('reference_date', models.DateField(verbose_name='Data de referência')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Saldo atual')),
                ('income', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Receitas')),
                ('expense', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Despesas')),
                ('credit', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Crédito')),
                ('transfer', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Transfências')),
                ('expected_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Saldo previsto')),
                ('expected_income', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Receitas Previstas')),
                ('expected_expense', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Despesas Previstas')),
                ('expected_credit', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Crédito Previsto')),
                ('expected_transfer', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Transfências Previstas')),
                ('deleted_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('stored', django.db.models.manager.Manager()),
            ],
        ),
    ]
